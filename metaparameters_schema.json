{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "UMD-ICSI Meta-Parameters",
    "technique": "This container combines three different approaches for trojan detection in NLP tasks: white-noise analysis (WNA), loss surface analysis (LSA) with model mixup and trojan transferability analysis (TTA).",
    "technique_description": "WNA: Sending random noise as inputs to the model and looking at how the model classifies them to identify anomalous biases. LSA: Interpolating the weights of a clean model and an unknown model and measuring the loss of these intermediate models, the loss surface of a clean model is more compatible to another clean model than a trojaned model. TTA: We identify the weights responsible for the trojan by using gradient ascent and we transfer these weights to a model to measure how difficult transferring a trojan to this model is, transferring to an already trojaned model might be more difficult.",
    "technique_changes": "Bug fixes and minor improvements.",
    "commit_id": "Placeholder",
    "repo_name": "https://github.com/yigitcankaya/TrojAI-NLP-R9",
    "additionalProperties": false,
    "required": [ "white_noise_iters", "white_noise_size", "transferability_sparsity", "loss_surface_num_steps"],
    "type": "object",
    "properties": {
      "white_noise_iters": {
        "description": "When we feed the fully connected layer of the model white noise, how many times we repeat to get the average.",
        "type": "integer",
        "minimum": 5,
        "maximum": 25
      },
      "white_noise_size": {
        "description": "When we feed the fully connected layer of the model white noise, how many samples we generate.",
        "type": "integer",
        "minimum": 1000,
        "maximum": 25000
      },
      "transferability_sparsity": {
        "description": "When we transfer the trojan from one model to another, the weight sparsity ratio of the trojan transfer.",
        "type": "number",
        "minimum": 0.0,
        "maximum": 1.0
      },
      "loss_surface_num_steps": {
        "description": "How many steps between two models during mixup interpolations to compute the loss surface changes",
        "enum": [-1, 6, 11, 21, 31]
      }
    }
  }